# –ò–º—è —Ñ–∞–π–ª–∞: handlers/common_handler.py (–§–ò–ù–ê–õ–¨–ù–ê–Ø –í–ï–†–°–ò–Ø)

import logging
import asyncpg
from aiogram import Router, F, types
from aiogram.filters import CommandStart, StateFilter, Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, ReplyKeyboardRemove, CallbackQuery

from keyboards import get_auth_keyboard, get_cancel_keyboard, get_admin_menu_keyboard, get_barista_menu_keyboard
from constants import GENERAL_CANCEL_TEXT, LOGOUT_BUTTON_TEXT, SCREEN_CLEAR_DIVIDER
from states import BugReportStates
from database import save_bug_report

router = Router()
logger = logging.getLogger(__name__)


async def check_auth(target: Message | CallbackQuery, state: FSMContext) -> str | None:
    data = await state.get_data()
    role = data.get('role')
    if role not in ['admin', 'barista']:
        if isinstance(target, Message):
            await target.answer("–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.")
        return None
    return role


@router.message(CommandStart(), StateFilter("*"))
async def handle_start(message: Message, state: FSMContext):
    await state.clear()
    await message.answer(
        "üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CoffeeBotV2!</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å, –æ—Ç–ø—Ä–∞–≤–∏–≤ –≤–∞—à –ø–∞—Ä–æ–ª—å.",
        reply_markup=get_auth_keyboard()
    )


@router.message(Command("help"))
async def cmd_help(message: types.Message, state: FSMContext):
    user_data = await state.get_data()
    user_role = user_data.get('role')
    help_text = "üëã **–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É CoffeeBotV2**\n\n"
    if user_role == 'admin':
        help_text += ("–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ **–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä**.\n\n"
                      "**–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n"
                      "`/start` - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞, –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.\n"
                      "`/logout` - –≤—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã.\n"
                      "`/bug` - —Å–æ–æ–±—â–∏—Ç—å –æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–±–ª–µ–º–µ.\n\n"
                      "**–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏:**\n"
                      "‚Ä¢ **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏:** –°–æ–∑–¥–∞–Ω–∏–µ, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–∫—É—â–∏—Ö –∑–∞–∫–∞–∑–æ–≤.\n"
                      "‚Ä¢ **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é:** –î–æ–±–∞–≤–ª–µ–Ω–∏–µ, –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –º–µ–Ω—é –∫–æ—Ñ–µ–π–Ω–∏.\n"
                      "‚Ä¢ **–û—Ç—á–µ—Ç—ã:** –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç—á–µ—Ç–æ–≤ –æ –ø—Ä–æ–¥–∞–∂–∞—Ö.\n\n"
                      "–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–∏–º —Ñ—É–Ω–∫—Ü–∏—è–º –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.")
    elif user_role == 'barista':
        help_text += ("–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ **–ë–∞—Ä–∏—Å—Ç–∞**.\n\n"
                      "**–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n"
                      "`/start` - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞, –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.\n"
                      "`/logout` - –≤—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã.\n"
                      "`/bug` - —Å–æ–æ–±—â–∏—Ç—å –æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–±–ª–µ–º–µ.\n\n"
                      "**–í–∞—à–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**\n"
                      "‚Ä¢ **–ü—Ä–∏–µ–º –∑–∞–∫–∞–∑–æ–≤:** –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤.\n"
                      "‚Ä¢ **–ù—É–º–µ—Ä–∞—Ü–∏—è:** –ó–∞–∫–∞–∑—ã –Ω—É–º–µ—Ä—É—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è (–ó–∞–∫–∞–∑ #1, –ó–∞–∫–∞–∑ #2 –∏ —Ç.–¥.).\n\n"
                      "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π `/bug`.")
    else:
        help_text += ("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n"
                      "–≠—Ç–æ –±–æ—Ç –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –∫–æ—Ñ–µ–π–Ω–∏. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è.\n\n"
                      "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ä–∞–±–æ—á–∏–π –ø–∞—Ä–æ–ª—å.")
    await message.answer(help_text, parse_mode="Markdown")


@router.message(Command("logout"), StateFilter("*"))
@router.message(F.text.casefold() == LOGOUT_BUTTON_TEXT.lower(), StateFilter("*"))
async def handle_logout(message: Message, state: FSMContext):
    await state.clear()
    await message.answer(f"{SCREEN_CLEAR_DIVIDER}–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã.", reply_markup=ReplyKeyboardRemove())
    await message.answer("–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å.", reply_markup=get_auth_keyboard())


@router.message(Command("bug"), StateFilter("*"))
async def bug_report_start(message: Message, state: FSMContext):
    if not await check_auth(message, state):
        return
    await state.set_state(BugReportStates.waiting_for_report_text)
    await message.answer("üêû <b>–°–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ</b>\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É...",
                         reply_markup=get_cancel_keyboard())


@router.message(BugReportStates.waiting_for_report_text, F.text)
async def bug_report_process_text(message: Message, state: FSMContext, db_pool: asyncpg.Pool):
    data = await state.get_data()
    user_role = data.get('role')
    response_text = ""
    if message.text == GENERAL_CANCEL_TEXT:
        response_text = "–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞."
    else:
        # <<< –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ü–µ—Ä–µ–¥–∞–µ–º db_pool
        success = await save_bug_report(db_pool, message.from_user.id, user_role, message.text)
        if success:
            response_text = "‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à –æ—Ç—á–µ—Ç –æ–± –æ—à–∏–±–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω."
        else:
            response_text = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
    await state.clear()
    if user_role:
        await state.set_data({'role': user_role})
    await message.answer(response_text, reply_markup=ReplyKeyboardRemove())
    if user_role == 'admin':
        await message.answer("–í–æ–∑–≤—Ä–∞—â–∞—é –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.", reply_markup=get_admin_menu_keyboard())
    elif user_role == 'barista':
        await message.answer("–í–æ–∑–≤—Ä–∞—â–∞—é –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–∞—Ä–∏—Å—Ç–∞.", reply_markup=get_barista_menu_keyboard())